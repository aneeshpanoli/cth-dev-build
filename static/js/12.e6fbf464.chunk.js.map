{"version":3,"sources":["components/dashBoard/TaskCard.jsx","components/dashBoard/MTSubmitForm.jsx","components/dashBoard/ProjectTab.jsx","components/dashBoard/ProjectHome.jsx","../node_modules/@material-ui/icons/AddOutlined.js"],"names":["useStyles","makeStyles","theme","root","minWidth","border","borderRadius","media","maxHeight","maxWidth","minHeight","objectFit","avatar","backgroundColor","width","height","overlay","position","top","left","color","header","palette","primary","main","button","secondary","textTransform","textAlign","transform","chipGrey","chipGreen","safe","chipRed","danger","bullet","display","margin","SearchCard","props","history","useHistory","dispatch","useDispatch","classes","useState","checked","mouseMoved","setMouseMoved","React","setUpvotes","setDownvotes","useTrackedState","authData","useEffect","r","_source","downvotes","upvotes","bull","className","Fade","timeout","in","key","_id","style","transitionDelay","Fragment","Grid","item","md","sm","xs","align","noW","marginRight","Link","onMouseMove","onMouseDown","onMouseUp","selectedProject","updateSelectedMT","push","projectTitle","replace","title","textDecoration","cursor","Typography","component","fontWeight","fontSize","variant","category","marginLeft","subtitle","IconButton","size","ProjectSettings","chipRoot","justifyContent","flexWrap","listStyle","padding","spacing","chip","paper","marginTop","flexDirection","alignItems","form","marginBottom","submit","error","backdrop","zIndex","drawer","MTSubmitForm","formErrors","setFormErrors","user","open","setOpen","embed","setEmbed","image","setImage","newChips","setNewChips","builtWith","country","createdAt","Date","storyText","owners","id","video","hackathons","updatedAt","links","keywords","roles","projectId","rewards","crisis","language","approved","completed","claimed","formValues","setFormValues","handleDeleteChip","objProp","newArr","filter","Object","assign","handleDeleteChipRoles","handleChange","event","field","target","value","handleChangeValue","values","errors","length","test","URL","slice","validate","makeChips","map","role","i","Chip","label","onDelete","onClick","noValidate","onSubmit","e","preventDefault","container","TextField","required","fullWidth","multiline","name","autoComplete","onChange","ImageUpload","onSave","url","file","console","log","path","reader","FileReader","onloadend","result","readAsDataURL","acceptedFiles","src","alt","borderBottom","controls","toolbarButtonSize","state","convertToHTML","styleToHTML","blockToHTML","block","type","entityToHTML","entity","originalText","data","href","getCurrentContent","Autocomplete","options","categories","getOptionLabel","option","_","renderInput","params","includes","concat","onAdd","index","videoUrl","Button","openForm","keys","status","q","formData","FormData","append","JSON","stringify","postProject","updateMicrotaskList","disabled","justify","TabPanel","children","other","hidden","aria-labelledby","Box","p","a11yProps","background","tabPanel","ProjectTab","useTheme","setValue","microtaskList","setOpenForm","handleOpenForm","isAuthenticated","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","axis","direction","onChangeIndex","dir","Container","Collapse","unmountOnExit","parseHtml","ProjectVideo","ProjectLinks","ProjectTech","flexGrow","text","appBar","bottom","DashBoard","resourceRef","useRef","slide","setSlide","currProject","setCurrProject","setMicrotasks","isFeedback","setIsFeedback","useParams","query","MATCH_ID_TITLE","queryEsById","updateSelectedProject","fetchProj","MATCH_PROJ_ID","simpleQueryElasticsearch","categoryName","activity","docId","userId","username","createDoc","handleActivity","handleScroll","throttle","current","getBoundingClientRect","window","innerHeight","addEventListener","removeEventListener","Head","description","TitleSubtitle","ref","Paper","Divider","ListComments","PostComment","Slide","Toolbar","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","createElement","d"],"mappings":"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","file":"static/js/12.e6fbf464.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport LongMenu from \"../menu/LongMenu\";\nimport { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport { updateSelectedMT } from \"../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { getImgUrl } from \"../js/utils\";\nimport Link from \"@material-ui/core/Link\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TurnedInNotOutlinedIcon from \"@material-ui/icons/TurnedInNotOutlined\";\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {IconButton, Button} from '@material-ui/core';\nimport ProjectSettings from './ProjectSettings'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: \"100%\",\n    border: \"1px solid #E8E8E8\",\n    borderRadius: 15,\n  },\n  media: {\n    maxHeight: \"auto\",\n    maxWidth: \"100%\",\n    minHeight: \"5rem\",\n    minWidth: \"5rem\",\n    objectFit: \"cover\",\n    borderRadius: 5,\n  },\n  avatar: {\n    backgroundColor: \"transparent\",\n    width: \"1.4rem\",\n    height: \"1.4rem\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"56.25%\",\n    left: \"1.2rem\",\n    color: \"black\",\n    backgroundColor: \"transparent\",\n  },\n  header: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    height: \"0.2rem\",\n  },\n  button: {\n    borderRadius: 20,\n    backgroundColor: theme.palette.secondary.main,\n    textTransform: \"none\",\n    position: \"absolute\",\n    left: \"62%\",\n    textAlign: \"middle\",\n    transform: `translateX(-50%)`,\n    // bottom: \"0.8rem\",\n    width: \"8rem\",\n    // height: \"2.5rem\",\n  },\n  chipGrey: {\n    backgroundColor: \"silver\",\n  },\n  chipGreen: {\n    backgroundColor: theme.palette.safe,\n  },\n  chipRed: {\n    backgroundColor: theme.palette.danger,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n}));\n\nexport default function SearchCard(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [checked] = useState(true);\n  const [mouseMoved, setMouseMoved] = useState(false);\n  const [upvotes, setUpvotes] = React.useState([]);\n  const [downvotes, setDownvotes] = React.useState([]);\n  const { authData } = useTrackedState();\n\n  React.useEffect(() => {\n    if (props.r && props.r._source.downvotes) {\n      setDownvotes(props.r._source.downvotes);\n    }\n    if (props.r && props.r._source.upvotes) {\n      setUpvotes(props.r._source.upvotes);\n    }\n  }, [props]);\n\n  const percentLikes = () => {\n    if (upvotes.length && downvotes.length) {\n      return (\n        Math.round(\n          (upvotes.length / (upvotes.length + downvotes.length)) * 100\n        ) + \"%\"\n      );\n    } else if (upvotes.length && (!downvotes || !downvotes.length)) {\n      return \"100%\";\n    }\n    return \"0%\";\n  };\n\n  // console.log(r)\n  const handleLearnmore = (selectedProject) => {\n    if (selectedProject && !mouseMoved) {\n      dispatch(updateSelectedMT(selectedProject));\n\n      history.push(\n        \"/\" +\n        selectedProject._source.projectTitle.replace(/\\s+/g, \"-\") +\n        \"/\" +\n          selectedProject._source.title.replace(/\\s+/g, \"-\") +\n          \"/\" +\n          selectedProject._id\n      );\n    }\n  };\n\n  const makeChip = () => {\n    if (authData._source && upvotes.includes(authData._source.id)) {\n      return (\n        <Chip\n          className={classes.chipGreen}\n          size=\"small\"\n          icon={<ThumbUpIcon />}\n          label={percentLikes()}\n        />\n      );\n    } else if (authData._source && downvotes.includes(authData._source.id)) {\n      return (\n        <Chip\n          className={classes.chipRed}\n          size=\"small\"\n          icon={<ThumbUpIcon />}\n          label={percentLikes()}\n        />\n      );\n    } else {\n      return (\n        <Chip\n          className={classes.chipGrey}\n          size=\"small\"\n          icon={<ThumbUpIcon />}\n          label={percentLikes()}\n        />\n      );\n    }\n  };\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Fade\n      timeout={600}\n      in={checked}\n      key={props.r._id}\n      style={{ transitionDelay: checked ? \"300ms\" : \"0ms\" }}\n    >\n<React.Fragment>\n\n        <Grid item md={12} sm={12} xs={12} align='left' noW>\n            <Grid item xs={12}>\n            <CheckBoxOutlineBlankIcon style={{ marginRight: \"1rem\" }}/>\n            <Link\n            onMouseMove={() => setMouseMoved(true)}\n            onMouseDown={() => setMouseMoved(false)}\n            onMouseUp={() => handleLearnmore(props.r)}\n            style={{ textDecoration: \"none\", cursor: \"pointer\" }}\n          >\n            <Typography component='span' style={{fontWeight:700, fontSize:'1.2rem'}}>\n            {props.r._source.title} {bull}{\" \"}\n                <Typography variant=\"body2\" component=\"span\">\n                  {props.r._source.category ?props.r._source.category\n                    : null} \n                </Typography>\n                \n              </Typography>\n              </Link>\n              \n              <Typography style={{ marginLeft: \"2.5rem\" }}>\n                {/* {props.r._source.subtitle.substring(0, 125) + \"...\"} */}\n                {props.r._source.subtitle ? props.r._source.subtitle : null}\n              </Typography>\n              {/* <Button style={{marginLeft: \"1.5rem\", color:'green'}}>Solve</Button> */}\n             <IconButton size='small' style={{marginLeft: \"1rem\", color:'silver'}}><TurnedInNotOutlinedIcon  /></IconButton> \n             \n            \n            \n            <IconButton size='small' style={{marginLeft: \"auto 1.5rem\", color:'silver'}} ><MoneyIcon /></IconButton>\n            <ProjectSettings selectedProject={props.r} style={{marginLeft: \"auto 1.5rem\", color:'silver'}} />\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <hr></hr>\n        </Grid>\n        </React.Fragment>\n    </Fade>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport { postProject } from \"../backend/AxiosRequest\";\nimport MUIRichTextEditor from \"mui-rte\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { countries, categories, roles } from \"../search/utils\";\nimport ImageUpload from \"../create/ImageUpload\";\nimport { convertToHTML } from \"draft-convert\";\nimport ChipInput from \"material-ui-chip-input\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {updateMicrotaskList} from '../redux/actions'\n\nconst useStyles = makeStyles((theme) => ({\n  chipRoot: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n    variant: \"outlined\",\n    height: \"1.5rem\",\n    color: theme.palette.primary.main,\n    border: \"1px solid\",\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 1, 2),\n    maxWidth: \"8rem\",\n  },\n  error: {\n    color: \"red\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"Required\";\n  } else if (values.title.length < 4) {\n    errors.title = \"The title should be atleast 4 characters long\";\n  } else if (values.title.length > 60) {\n    errors.title = \"The title should be less than 60 characters\";\n  } else if (/[*._%+-?]+/i.test(values.title)) {\n    errors.title = \"Invalid characters in the title*\";\n  }\n\n  if (!values.subtitle) {\n    errors.subtitle = \"Required\";\n  } else if (values.subtitle.length < 60) {\n    errors.subtitle = \"The description should be atleast 60 characters long\";\n  }\n\n  // if (!values.motivation) {\n  //   errors.motivation = \"Required\";\n  // } else if (values.motivation.length < 60) {\n  //   errors.motivation = \"The description should be atleast 60 characters long\";\n  // }\n\n  if (!values.storyText) {\n    errors.storyText = \"Required\";\n  } else if (values.storyText.length < 60) {\n    errors.storyText = \"The description should be atleast 60 characters long\";\n  }\n\n  if (!values.category) {\n    errors.category = \"Required\";\n  }\n\n  if (values.roles.length === 0 || !values.roles) {\n    errors.roles = \"Required\";\n  }\n\n  if (values.links && values.links.length > 0) {\n    try {\n      new URL(values.links.slice(-1));\n    } catch (error) {\n      errors.links = \"Not a valid url\";\n    }\n  }\n\n  // if (values.video) {\n  //   try {\n  //     new URL(values.video);\n  //   } catch (error) {\n  //     errors.video = \"Not a valid url\";\n  //   }\n  // }\n\n  if (values.keywords.length === 0 || !values.keywords) {\n    errors.keywords = \"Required\";\n  }\n\n  if (values.builtWith.length === 0 || !values.builtWith) {\n    errors.builtWith = \"Required\";\n  }\n\n  // if (!values.country) {\n  //   errors.country = \"Required\";\n  // }\n\n  if (!values.image) {\n    errors.image = \"Required\";\n  }\n\n  return errors;\n};\n\nexport default function MTSubmitForm(props) {\n  const [formErrors, setFormErrors] = React.useState({});\n  const history = useHistory();\n  const classes = useStyles();\n  const { authData } = useTrackedState();\n  React.useEffect(() => {\n    if (!authData.user) {\n      history.push(\"/\");\n    }\n  });\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [embed, setEmbed] = React.useState(null);\n  const [image, setImage] = React.useState(null);\n\n  const [newChips, setNewChips] = React.useState(null);\n  const [formValues, setFormValues] = React.useState({\n    builtWith: [],\n    category: \"\",\n    country: \"\",\n    createdAt: new Date(),\n    storyText: \"\",\n    subtitle: \"\",\n    owners: authData && authData.user ? authData.user.id : \"\",\n    video: \"\",\n    hackathons: [],\n    updatedAt: new Date(),\n    links: [],\n    keywords: [],\n    title: \"\",\n    roles: [],\n    projectId: props.selectedProject._id,\n    projectTitle:props.selectedProject._source.title,\n    rewards: \"\",\n    crisis: \"\",\n    language: \"\",\n    approved: \"no\",\n    completed: \"no\",\n    claimed:\"yes\"\n  });\n\n  const handleDeleteChip = (chip, objProp) => {\n    let newArr = [...formValues[objProp]].filter((item) => item !== chip);\n    setFormValues(Object.assign({}, formValues, { [objProp]: newArr }));\n  };\n\n  const handleDeleteChipRoles = (chip) => {\n    let newArr = [...formValues.roles].filter((item) => item !== chip);\n    setFormValues(Object.assign({}, formValues, { roles: newArr }));\n  };\n  const handleChange = (event, field) => {\n    // copy new values to formValues\n    setFormValues({ ...formValues, [field]: event.target.value });\n  };\n\n  const handleChangeValue = (field, value) => {\n    // copy new values to formValues\n    setFormValues({ ...formValues, [field]: value });\n  };\n\n  React.useEffect(() => {\n    // console.log(formValues);\n    setFormErrors(validate({ ...formValues, image: embed ? true : false }));\n    setNewChips(makeChips(formValues));\n  }, [formValues, embed]);\n\n  const handleSubmit = () => {\n    console.log(formErrors);\n    if (!Object.keys(formErrors).length === 0) {\n      console.log(\"not submitting\");\n      return;\n    }\n    //   alert(JSON.stringify(values, null, 2));\n    console.log(\"submitting data\");\n    let data = {\n      status: \"microtasknew\",\n      index: \"microtasks\",\n      q: formValues,\n    };\n    let formData = new FormData();\n\n    formData.append(\"params\", JSON.stringify(data));\n    formData.append(\"image\", image, image.path);\n    const updateData = (data) => dispatch(updateMicrotaskList(data))\n    postProject(formData, authData.key, history, formValues.title, updateData);\n    setOpen(true);\n  };\n\n  const handleEmbed = (url) => {\n    setImage(url[0].file);\n    console.log(url[0].file.path);\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      setEmbed(reader.result);\n      console.log(embed);\n    };\n    reader.readAsDataURL(url[0].file);\n  };\n\n  const makeChips = (values) => {\n    return (\n      <div className={classes.chipRoot}>\n        {values.roles.map((role, i) => {\n          return (\n            <li key={i}>\n              <Chip\n                label={role}\n                onDelete={() => handleDeleteChipRoles(role)}\n                onClick={() => handleDeleteChipRoles(role)}\n                className={classes.chip}\n              />\n            </li>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {!open ? (\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Create A Microtask\n          </Typography>\n\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(e) => {\n              e.preventDefault();\n              return false;\n            }}\n          >\n            {/* TITLE */}\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                {formErrors.title ? (\n                  <sup className={classes.error}>{formErrors.title}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <TextField\n                  variant=\"standard\"\n                  required\n                  fullWidth\n                  multiline\n                  id=\"title\"\n                  label=\"Microtask title\"\n                  name=\"title\"\n                  autoComplete=\"none\"\n                  onChange={(e) => handleChange(e, \"title\")}\n                  value={formValues.title}\n                />\n              </Grid>\n\n              {/* IMAGE EMBED */}\n              <Grid item xs={12}>\n                {formErrors.image ? (\n                  <sup className={classes.error}>{formErrors.image}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <ImageUpload onSave={handleEmbed} acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}/>\n                {embed ? (\n                  <Grid item xs={12}>\n                    <img\n                      src={embed}\n                      alt=\"title-image\"\n                      style={{\n                        maxHeight: \"400px\",\n                        marginTop: \"1rem\",\n                        maxWidth: \"100%\",\n                      }}\n                    />\n                  </Grid>\n                ) : null}\n              </Grid>\n\n              {/* SUBTITLE */}\n\n              <Grid item xs={12}>\n                {formErrors.subtitle ? (\n                  <sup className={classes.error}>{formErrors.subtitle}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <TextField\n                  variant=\"standard\"\n                  required\n                  fullWidth\n                  id=\"subtitle\"\n                  label=\"Subtitle\"\n                  name=\"subtitle\"\n                  onChange={(e) => handleChange(e, \"subtitle\")}\n                  value={formValues.subtitle}\n                />\n              </Grid>\n\n              {/* MOTIVATION               */}\n              {/* <Grid item xs={12}>\n                {formErrors.motivation ? (\n                  <sup className={classes.error}>{formErrors.motivation}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <TextField\n                  variant=\"standard\"\n                  required\n                  fullWidth\n                  id=\"motivation\"\n                  label=\"Motivation\"\n                  name=\"motivation\"\n                  onChange={() =>\n                    handleChange(\"motivation\", event.target.value)\n                  }\n                  value={formValues.motivation}\n                />\n              </Grid> */}\n\n              {/* DESCRIPTION */}\n\n              <Grid item xs={12}>\n                {formErrors.storyText ? (\n                  <sup className={classes.error}>{formErrors.storyText}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <div\n                  style={{ borderBottom: \"1px solid grey\", minHeight: \"4rem\" }}\n                >\n                  <MUIRichTextEditor\n                    label=\"Description *\"\n                    id=\"storyText\"\n                    name=\"storyText\"\n                    controls={[\n                      \"bold\",\n                      \"italic\",\n                      \"underline\",\n                      \"bulletList\",\n                      \"quote\",\n                      \"code\",\n                      \"link\",\n                    ]}\n                    toolbarButtonSize=\"small\"\n                    onChange={(state) =>\n                      handleChangeValue(\n                        \"storyText\",\n                        convertToHTML({\n                          styleToHTML: (style) => {\n                            if (style === \"BOLD\") {\n                              return <span style={{ color: \"blue\" }} />;\n                            }\n                          },\n                          blockToHTML: (block) => {\n                            if (block.type === \"code-block\") {\n                              return <code />;\n                            }\n                          },\n                          entityToHTML: (entity, originalText) => {\n                            try {\n                              new URL(entity.data.url);\n                            } catch (error) {\n                              return (\n                                originalText + \" (\" + entity.data.url + \")\"\n                              );\n                            }\n                            if (entity.type === \"LINK\") {\n                              return (\n                                <a href={entity.data.url} target={\"_blank\"}>\n                                  {originalText}\n                                </a>\n                              );\n                            }\n                            return originalText;\n                          },\n                        })(state.getCurrentContent())\n                      )\n                    }\n                    // value={EditorState.createWithContent(convertFromHTML(formValues.storyText)) }\n                  />\n                </div>\n              </Grid>\n\n              {/* CATEGORY              */}\n              <Grid item xs={12}>\n                {formErrors.category ? (\n                  <sup className={classes.error}>{formErrors.category}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={categories}\n                  getOptionLabel={(option) => option.category}\n                  fullWidth\n                  onChange={(_, value) => {\n                    handleChangeValue(\"category\", value ? value.category : \"\");\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Category\"\n                      variant=\"standard\"\n                    />\n                  )}\n                />\n              </Grid>\n\n              {/* ROLES */}\n              <Grid item xs={12}>\n                {formErrors.roles ? (\n                  <sup className={classes.error}>{formErrors.roles}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                {newChips}\n                <Autocomplete\n                  id=\"role\"\n                  options={roles}\n                  getOptionLabel={(option) => option.role}\n                  fullWidth\n                  onChange={(_, value) => {\n                    handleChangeValue(\n                      \"roles\",\n                      value && !formValues.roles.includes(value.role)\n                        ? [...formValues.roles].concat([value.role])\n                        : [...formValues.roles]\n                    );\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Skills needed*\"\n                      variant=\"standard\"\n                    />\n                  )}\n                />\n              </Grid>\n\n              {/* COUNTRY */}\n\n              {/* <Grid item xs={12}>\n                {formErrors.country ? (\n                  <sup className={classes.error}>{formErrors.country}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <Autocomplete\n                  id=\"country\"\n                  options={countries}\n                  getOptionLabel={(option) => option.label}\n                  fullWidth\n                  onChange={(_, value) => {\n                    handleChange(\"country\", value ? value.label : \"\");\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Country*\"\n                      variant=\"standard\"\n                    />\n                  )}\n                />\n              </Grid> */}\n              {/* LINKS */}\n              <Grid item xs={12}>\n                {formErrors.links ? (\n                  <sup className={classes.error}>{formErrors.links}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <ChipInput\n                  value={formValues.links}\n                  classes={{\n                    chip: classes.chip,\n                  }}\n                  fullWidth\n                  label=\"Important links (press enter to add more than one link)\"\n                  onAdd={(chip) => {\n                    handleChangeValue(\"links\", [...formValues.links].concat([chip]));\n                  }}\n                  onDelete={(chip, index) => handleDeleteChip(chip, \"links\")}\n                />\n              </Grid>\n\n              {/* BUITWITH */}\n              <Grid item xs={12}>\n                {formErrors.builtWith ? (\n                  <sup className={classes.error}>{formErrors.builtWith}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <ChipInput\n                  classes={{\n                    chip: classes.chip,\n                  }}\n                  value={formValues.builtWith}\n                  fullWidth\n                  label=\"Technology (press enter to add more than one technologies)\"\n                  onAdd={(chip) => {\n                    handleChangeValue(\n                      \"builtWith\",\n                      [...formValues.builtWith].concat([chip])\n                    );\n                  }}\n                  onDelete={(chip, index) =>\n                    handleDeleteChip(chip, \"builtWith\")\n                  }\n                />\n              </Grid>\n\n              {/* TAGS/KEYWORDS */}\n              <Grid item xs={12}>\n                {formErrors.keywords ? (\n                  <sup className={classes.error}>{formErrors.keywords}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <ChipInput\n                  classes={{\n                    chip: classes.chip,\n                  }}\n                  value={formValues.keywords}\n                  fullWidth\n                  label=\"Tags (press enter to add more than one keyword)\"\n                  onAdd={(chip) => {\n                    handleChangeValue(\n                      \"keywords\",\n                      [...formValues.keywords].concat([chip])\n                    );\n                  }}\n                  onDelete={(chip, index) => handleDeleteChip(chip, \"keywords\")}\n                />\n              </Grid>\n              {/* VIDEO URL */}\n              <Grid item xs={12}>\n                {formErrors.video ? (\n                  <sup className={classes.error}>{formErrors.video}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <TextField\n                  variant=\"standard\"\n                  fullWidth\n                  name=\"videourl\"\n                  label=\"Video url\"\n                  type=\"text\"\n                  id=\"videoUrl\"\n                  autoComplete=\"current-password\"\n                  onChange={(e) => handleChange(e, \"video\")}\n                  value={formValues.videoUrl}\n                />\n              </Grid>\n              {/* EVENTS/HACKATHONS */}\n              {/* <Grid item xs={12}>\n                {formErrors.hackathons ? (\n                  <sup className={classes.error}>{formErrors.hackathons}</sup>\n                ) : (\n                  <sup className={classes.error}>{\"\"}</sup>\n                )}\n                <ChipInput\n                  value={formValues.hackathons}\n                  fullWidth\n                  classes={{\n                    chip: classes.chip,\n                  }}\n                  label=\"Events/hackathons (press enter to add more than one events/hackathons)\"\n                  onAdd={(chip) => {\n                    handleChange(\n                      \"hackathons\",\n                      [...formValues.hackathons].concat([chip])\n                    );\n                  }}\n                  onDelete={(chip, index) =>\n                    handleDeleteChip(chip, \"hackathons\")\n                  }\n                />\n              </Grid> */}\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.submit}\n              onClick={props.openForm}\n            >\n              Cancel\n            </Button>\n            {authData.error ? (\n              <sub className={classes.error}>{authData.error}</sub>\n            ) : null}\n            <Button\n              onClick={handleSubmit}\n              fullWidth\n              variant=\"contained\"\n              disabled={Object.keys(formErrors)[0] ? true : false}\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Submit\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item></Grid>\n            </Grid>\n          </form>\n        </div>\n      ) : (\n        <div>\n          <div\n            style={{\n              width: \"100%\",\n              height: \"3rem\",\n              textAlign: \"center\",\n              backgroundColor: \"#061F71\",\n              color: \"white\",\n            }}\n          >\n            <h3>Thank you!</h3>\n          </div>\n          <h5 style={{ fontWeight: 400 }}>Your Microtask has been submitted.</h5>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTrackedState } from \"reactive-react-redux\";\nimport TaskCard from \"./TaskCard\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport parseHtml from \"html-react-parser\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport ProjectLinks from \"./ProjectLinks\";\nimport ProjectVideo from \"./ProjectVideo\";\nimport ProjectTech from \"./ProjectTech\";\nimport MTSubmitForm from \"./MTSubmitForm\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport Button from \"@material-ui/core/Button\";\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component='div'>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n  tabPanel: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function ProjectTab(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const { authData, microtaskList } = useTrackedState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const history = useHistory();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const handleOpenForm = () => {\n    if (!authData.isAuthenticated) {\n      history.push(\"/sign-in\");\n      return;\n    }\n    setOpenForm(!openForm);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Microtasks\" {...a11yProps(0)} />\n          <Tab label=\"Details\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel\n          value={value}\n          index={0}\n          dir={theme.direction}\n          className={classes.tabPanel}\n        >\n          <Container >\n            <h4 style={{ margin: \"0 auto\", textAlign: \"left\" }}>\n              Project Tasks\n            </h4>\n            <hr></hr>\n            <Grid container spacing={1}>\n              <Grid item sm={12} md={12} xs={12}>\n                <AddOutlinedIcon style={{ marginRight: \"0.6rem\" }} />\n                <Button\n                  onClick={handleOpenForm}\n                  variant=\"text\"\n                  style={{\n                    textTransform: \"none\",\n                    fontWeight: 700,\n                    fontSize: \"1.2rem\",\n                  }}\n                >\n                  {\"  \"}\n                  New Task\n                </Button>\n              </Grid>\n              <Collapse in={openForm} timeout=\"auto\" unmountOnExit>\n                <Grid item sm={12} md={12} xs={12}>\n                  <MTSubmitForm\n                    openForm={handleOpenForm}\n                    selectedProject={props.selectedProject}\n                  />\n                </Grid>\n              </Collapse>\n              <Grid item sm={12} md={12} xs={12}>\n                {microtaskList &&\n                  microtaskList[0] &&\n                  microtaskList.map((r, i) => <TaskCard key={i} r={r} />)}\n              </Grid>\n            </Grid>\n          </Container>\n        </TabPanel>\n        <TabPanel\n          value={value}\n          index={1}\n          dir={theme.direction}\n          className={classes.tabPanel}\n        >\n          {props.selectedProject ? (\n            <Container>\n              <Grid\n                container\n\n                // left: \"50%\",\n                // transform: `translateX(-50%)`,\n              >\n                <Grid item md={12} sm={12} xs={12}>\n                  <h4 style={{ margin: \"0 auto\", textAlign: \"left\" }}>\n                    Project details\n                  </h4>\n                  <hr></hr>\n                  <Typography variant=\"body1\">\n                    {parseHtml(\n                      props.selectedProject\n                        ? props.selectedProject._source.storyText\n                        : null\n                    )}\n                  </Typography>\n                </Grid>\n                <Grid item sm={12} md={12} xs={12}>\n                  <h2>Resources</h2>\n                </Grid>\n                <Grid item sm={12} md={6} xs={12}>\n                  <ProjectVideo selectedProject={props.selectedProject} />\n                </Grid>\n                <Grid item sm={12} md={6} xs={12}>\n                  <ProjectLinks selectedProject={props.selectedProject} />\n                  <ProjectTech selectedProject={props.selectedProject} />\n                </Grid>\n              </Grid>\n            </Container>\n          ) : null}\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport React, { useEffect, useRef } from \"react\";\nimport { MATCH_ID_TITLE } from \"../backend/EsQueries\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { queryEsById, createDoc } from \"../backend/AxiosRequest\";\nimport { updateSelectedProject, updateMicrotaskList } from \"../redux/actions\";\nimport TitleSubtitle from \"./TitleSubtitle\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport ProjectTab from \"./ProjectTab\";\n\nimport PostComment from \"./PostComment\";\nimport ListComments from \"./ListComments\";\nimport { Button, IconButton } from \"@material-ui/core\";\n\n\nimport Box from \"@material-ui/core/Box\";\nimport { simpleQueryElasticsearch } from \"../backend/AxiosRequest\";\nimport { MATCH_PROJ_ID } from \"../backend/EsQueries\";\nimport throttle from \"lodash.throttle\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Head from \"../meta/Head\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n}));\n\nexport default function DashBoard() {\n  const classes = useStyles();\n  const history = useHistory();\n  const resourceRef = useRef(null);\n  const [slide, setSlide] = React.useState(false);\n  const [currProject, setCurrProject] = React.useState();\n  const [microtasks, setMicrotasks] = React.useState();\n  const [isFeedback, setIsFeedback] = React.useState(true);\n  const { selectedProject, authData, microtaskList } = useTrackedState();\n\n  let params = useParams();\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setSlide(false);\n  };\n  const fetchProj = (id, title, index) => {\n    let query = MATCH_ID_TITLE(id, title, index);\n    queryEsById(query, dispatch, updateSelectedProject, history);\n  };\n\n  function handleActivity() {\n\n    let data =  {\n        index: \"activity\",\n        q: {\n          categoryName: \"project\",\n          activity: \"visited\",\n          docId: selectedProject._id,\n          title: selectedProject._source.title,\n          userId: authData.user.id,\n          username: authData.user.username,\n          createdAt: new Date(),\n        },\n      }\n    let formData = new FormData();\n\n    formData.append(\"params\", JSON.stringify(data));\n\n    createDoc(formData, authData.key, null);\n  }\n\n  useEffect(() => {\n    if (!selectedProject  || selectedProject._source.projectTitle) {\n      fetchProj(params.id, params.name.replace(/-/g, \" \"), 'projects');\n    } else {\n      const query = MATCH_PROJ_ID(selectedProject._id, \"microtasks\");\n      simpleQueryElasticsearch(query, dispatch, updateMicrotaskList);\n      if (authData && authData.user) {\n        handleActivity();\n      }\n    }\n    setCurrProject(selectedProject);\n    setIsFeedback(\n      authData._source && selectedProject && selectedProject._source.upvotes\n        ? !selectedProject._source.upvotes.includes(authData._source.id) &&\n            !selectedProject._source.downvotes.includes(authData._source.id)\n        : null\n    );\n  }, [selectedProject]);\n  const handleScroll = throttle(() => {\n    if (resourceRef &&resourceRef.current&& isFeedback) {\n      if (\n        resourceRef.current.getBoundingClientRect().top <\n        (window.innerHeight * 1) / 2\n      ) {\n        if (authData.isAuthenticated) {\n        }\n        setSlide(true);\n      } else {\n        // setSlide(false)\n      }\n    }\n  }, 100);\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    setMicrotasks(microtaskList);\n  }, [microtaskList]);\n\n\n  return (\n    <Box>\n      <Head\n        title={\n          currProject ? currProject._source.title + \" - CivicTechHub\" : null\n        }\n        description={currProject ? currProject._source.subtitle : null}\n        image={currProject ? currProject._source.image : null}\n      />\n      {currProject ? (\n        <React.Fragment>\n          <TitleSubtitle selectedProject={currProject} />\n          <ProjectTab selectedProject={currProject} />\n          <Container>\n            <Grid container spacing={2}>\n              \n\n              <Grid item sm={12} xs={12} ref={resourceRef}>\n                <Paper className={classes.paper}>\n                  <h4>Comments</h4>\n                  <Divider />\n                  {params.id ? (\n                    <React.Fragment>\n                      <ListComments projectId={params.id} />\n                      <Divider />\n                    </React.Fragment>\n                  ) : null}\n\n                  {authData.isAuthenticated && params.id ? (\n                    <PostComment projectId={params.id} />\n                  ) : (\n                    <h5>\n                      Please <Button href=\"/sign-in\">sign in </Button> to post\n                      comments\n                    </h5>\n                  )}\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </React.Fragment>\n      ) : null}\n      {isFeedback ? (\n        <Slide in={slide} direction=\"up\">\n          <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n            <Toolbar>\n              <Container>\n                <Grid container spacing={2}>\n                  <Grid item sm={6} md={6} xs={12}>\n                    <h3>Do you like this project? </h3>\n                  </Grid>\n                  <Grid item sm={6} md={6} xs={12}>\n                    Your feedback will help us to identify the most promising\n                    projects. Thank you!\n                  </Grid>\n                </Grid>\n              </Container>\n              <IconButton onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </Slide>\n      ) : null}\n    </Box>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\n\nexports.default = _default;"],"sourceRoot":""}
{"version":3,"sources":["components/dashBoard/MTTab.jsx","components/dashBoard/MTHome.jsx","../node_modules/@material-ui/icons/AddOutlined.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","component","a11yProps","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","width","tabPanel","ProjectTab","classes","useTheme","React","useState","setValue","authData","useTrackedState","openForm","setOpenForm","history","useHistory","handleOpenForm","isAuthenticated","push","className","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","aria-label","Tab","label","axis","direction","onChangeIndex","dir","selectedMT","Container","Grid","container","item","md","sm","xs","style","margin","textAlign","parseHtml","_source","storyText","ProjectVideo","selectedProject","ProjectLinks","ProjectTech","spacing","marginRight","Button","onClick","textTransform","fontWeight","fontSize","Collapse","in","timeout","unmountOnExit","SolutionForm","solutionsList","map","r","i","SolutionCard","key","flexGrow","padding","text","secondary","appBar","top","bottom","DashBoard","resourceRef","useRef","slide","setSlide","isFeedback","setIsFeedback","setSolutionsList","params","useParams","dispatch","useDispatch","useEffect","projectTitle","console","log","query","q","size","constant_score","filter","term","mtId","_id","esAxios","get","then","response","data","hits","catch","error","getSolutions","user","categoryName","activity","docId","title","projectId","userId","username","createdAt","Date","formData","FormData","append","JSON","stringify","createDoc","handleActivity","MATCH_ID_TITLE","queryEsById","updateSelectedMT","fetchProj","mt","replace","upvotes","includes","downvotes","handleScroll","throttle","current","getBoundingClientRect","window","innerHeight","addEventListener","removeEventListener","Head","description","subtitle","image","Fragment","TitleSubtitle","ref","Paper","Divider","ListComments","PostComment","href","Slide","Toolbar","IconButton","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d"],"mappings":"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","file":"static/js/11.8332d8f2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport SolutionCard from \"./SolutionCard\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {useHistory} from 'react-router-dom'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport parseHtml from \"html-react-parser\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport ProjectLinks from \"./ProjectLinks\";\nimport ProjectVideo from \"./ProjectVideo\";\nimport ProjectTech from \"./ProjectTech\";\nimport SolutionForm from \"./SolutionForm\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport MTCarousel from \"./MTCarousel\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxOutlinedIcon from \"@material-ui/icons/CheckBoxOutlined\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport Button from \"@material-ui/core/Button\";\nimport Badge from '@material-ui/core/Badge';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component='div'>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n  tabPanel: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function ProjectTab(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const { authData } = useTrackedState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const history = useHistory()\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const handleOpenForm = () => {\n    if(!authData.isAuthenticated){\n      history.push(\"/sign-in\")\n      return\n    }\n    setOpenForm(!openForm);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Details\" {...a11yProps(0)} />\n          <Tab label=\"Solutions\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n                <TabPanel\n          value={value}\n          index={0}\n          dir={theme.direction}\n          className={classes.tabPanel}\n        >\n           {props.selectedMT ? (\n            <Container>\n              <Grid\n                container\n\n                // left: \"50%\",\n                // transform: `translateX(-50%)`,\n              >\n                <Grid item md={12} sm={12} xs={12}>\n                  <h4 style={{ margin: \"0 auto\", textAlign: \"left\" }}>\n                    Task details\n                  </h4>\n                  <hr></hr>\n                  <Typography variant=\"body1\" component='span'>\n                    {parseHtml(\n                      props.selectedMT\n                        ? props.selectedMT._source.storyText\n                        : null\n                    )}\n                  </Typography>\n                </Grid>\n                <Grid item sm={12} md={12} xs={12}>\n                  <h2>Files</h2>\n                </Grid>\n                <Grid item sm={12} md={6} xs={12}>\n                  <ProjectVideo selectedProject={props.selectedProject} />\n                </Grid>\n                <Grid item sm={12} md={6} xs={12}>\n                  <ProjectLinks selectedProject={props.selectedProject} />\n                  <ProjectTech selectedProject={props.selectedProject} />\n                </Grid>\n              </Grid>\n            </Container>\n          ) : null}\n          \n        </TabPanel>\n        <TabPanel\n          value={value}\n          index={1}\n          dir={theme.direction}\n          className={classes.tabPanel}\n        >\n         <Container>\n          <h4 style={{ margin: \"0 auto\", textAlign: \"left\" }}>Submitted solutions</h4>\n          <hr></hr>\n          <Grid container spacing={1}>\n            <Grid item sm={12} md={12} xs={12}>\n            <AddOutlinedIcon style={{marginRight:'0.6rem'}}/>\n              <Button\n                onClick={handleOpenForm}\n                variant=\"text\"\n                style={{textTransform:'none', fontWeight:700, fontSize:'1.2rem'}}\n              >\n                {\"  \"}\n                Submit a solution\n              </Button>\n            </Grid>\n            <Collapse in={openForm} timeout=\"auto\" unmountOnExit>\n              <Grid item sm={12} md={12} xs={12}>\n                <SolutionForm\n                  openForm={handleOpenForm}\n                  selectedMT={props.selectedMT}\n                />\n              </Grid>\n            </Collapse>\n            <Grid item sm={12} md={12} xs={12}>\n              {props.solutionsList &&\n                props.solutionsList[0] &&\n                props.solutionsList.map((r, i) => <SolutionCard key={i} r={r} />)}\n            </Grid>\n\n          </Grid>\n          </Container>\n        </TabPanel>\n\n      </SwipeableViews>\n    </div>\n  );\n}\n","import { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport React, { useEffect, useRef } from \"react\";\nimport { MATCH_ID_TITLE } from \"../backend/EsQueries\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { queryEsById, createDoc } from \"../backend/AxiosRequest\";\nimport { updateSelectedMT } from \"../redux/actions\";\nimport TitleSubtitle from \"./TitleSubtitle\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MTTab from \"./MTTab\";\n\nimport PostComment from \"./PostComment\";\nimport ListComments from \"./ListComments\";\nimport { Button, IconButton } from \"@material-ui/core\";\n\nimport Box from \"@material-ui/core/Box\";\nimport { esAxios } from \"../backend/AxiosRequest\";\nimport { MATCH_PROJ_ID } from \"../backend/EsQueries\";\nimport throttle from \"lodash.throttle\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Head from \"../meta/Head\";\nimport { SELECTED_MT } from \"../redux/actionTypes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n}));\n\nexport default function DashBoard() {\n  const classes = useStyles();\n  const history = useHistory();\n  const resourceRef = useRef(null);\n  const [slide, setSlide] = React.useState(false);\n  // const [currProject, setCurrProject] = React.useState();\n  const [isFeedback, setIsFeedback] = React.useState(true);\n  const { selectedMT, authData } = useTrackedState();\n  const [solutionsList, setSolutionsList] = React.useState();\n\n  let params = useParams();\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setSlide(false);\n  };\n  const fetchProj = (id, title, index) => {\n    let query = MATCH_ID_TITLE(id, title, index);\n    queryEsById(query, dispatch, updateSelectedMT, history);\n  };\n\n  function handleActivity() {\n    let data = {\n      index: \"activity\",\n      q: {\n        categoryName: \"microtask\",\n        activity: \"visited\",\n        docId: selectedMT._id,\n        title: selectedMT._source.title,\n        projectTitle: selectedMT._source.projectTitle,\n        projectId: selectedMT._source.projectId,\n        userId: authData.user.id,\n        username: authData.user.username,\n        createdAt: new Date(),\n      },\n    };\n    let formData = new FormData();\n\n    formData.append(\"params\", JSON.stringify(data));\n\n    createDoc(formData, authData.key, null);\n  }\n\n  const getSolutions = () => {\n    // update the search project list\n    console.log(selectedMT);\n    const query = {\n      params: {\n        index: \"solutions\",\n        q: {\n          size: 20,\n          query: {\n            constant_score: {\n              filter: {\n                term: {\n                  mtId: selectedMT._id,\n                },\n              },\n            },\n          },\n        },\n      },\n    };\n    console.log(query)\n    esAxios\n      .get(`/q/`, query)\n      .then((response) => {\n        // process response.\n\n        // this.setState({results: response});\n        console.log(response.data.hits);\n        setSolutionsList(response.data.hits.hits);\n      })\n      .catch((error) => {\n        // catch errors.\n        console.log(error);\n        return error;\n      });\n  };\n\n  useEffect(() => {\n    if (!selectedMT || !selectedMT._source.projectTitle) {\n      fetchProj(params.id, params.mt.replace(/-/g, \" \"), \"microtasks\");\n    } else {\n      getSolutions();\n      if (authData && authData.user) {\n        handleActivity();\n      }\n    }\n    // setCurrProject(selectedMT);\n    setIsFeedback(\n      authData._source && selectedMT && selectedMT._source.upvotes\n        ? !selectedMT._source.upvotes.includes(authData._source.id) &&\n            !selectedMT._source.downvotes.includes(authData._source.id)\n        : null\n    );\n  }, [selectedMT]);\n\n  const handleScroll = throttle(() => {\n    if (resourceRef && resourceRef.current && isFeedback) {\n      if (\n        resourceRef.current.getBoundingClientRect().top <\n        (window.innerHeight * 1) / 2\n      ) {\n        if (authData.isAuthenticated) {\n        }\n        setSlide(true);\n      } else {\n        // setSlide(false)\n      }\n    }\n  }, 100);\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <Box>\n      <Head\n        title={\n          selectedMT\n            ? selectedMT._source.projectTitle +\n              \": \" +\n              selectedMT._source.title +\n              \" - CivicTechHub\"\n            : null\n        }\n        description={selectedMT ? selectedMT._source.subtitle : null}\n        image={selectedMT ? selectedMT._source.image : null}\n      />\n      {selectedMT ? (\n        <React.Fragment>\n          <TitleSubtitle selectedProject={selectedMT} />\n          <MTTab selectedMT={selectedMT} solutionsList={solutionsList} />\n          <Container>\n            <Grid container spacing={2}>\n              <Grid item sm={12} xs={12} ref={resourceRef}>\n                <Paper className={classes.paper}>\n                  <h4>Comments</h4>\n                  <Divider />\n                  {params.id ? (\n                    <React.Fragment>\n                      <ListComments projectId={params.id} />\n                      <Divider />\n                    </React.Fragment>\n                  ) : null}\n\n                  {authData.isAuthenticated && params.id ? (\n                    <PostComment projectId={params.id} />\n                  ) : (\n                    <h5>\n                      Please <Button href=\"/sign-in\">sign in </Button> to post\n                      comments\n                    </h5>\n                  )}\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </React.Fragment>\n      ) : null}\n      {isFeedback ? (\n        <Slide in={slide} direction=\"up\">\n          <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n            <Toolbar>\n              <Container>\n                <Grid container spacing={2}>\n                  <Grid item sm={6} md={6} xs={12}>\n                    <h3>Do you like this project? </h3>\n                  </Grid>\n                  <Grid item sm={6} md={6} xs={12}>\n                    Your feedback will help us to identify the most promising\n                    projects. Thank you!\n                  </Grid>\n                </Grid>\n              </Container>\n              <IconButton onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </Slide>\n      ) : null}\n    </Box>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\n\nexports.default = _default;"],"sourceRoot":""}
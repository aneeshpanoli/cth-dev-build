{"version":3,"sources":["components/create/SelectField.jsx","components/create/DateTimePicker.jsx","components/create/MultilineText.jsx","components/create/ProjectCardPreview.jsx","components/create/ConfirmPost.jsx","components/create/ChallengeForm.jsx"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","dispatch","useDispatch","challengeFormData","useTrackedState","FormControl","className","InputLabel","id","Select","labelId","defaultValue","primeArea","onChange","event","target","value","updateChallengeFormData","MenuItem","MaterialUIPickers","today","Date","React","useState","selectedDate","setSelectedDate","handleDateChange","date","utils","DateFnsUtils","Grid","container","minDate","label","format","KeyboardButtonProps","root","MultilineTextFields","props","noValidate","autoComplete","TextField","required","multiline","e","console","log","handleChange","rowsMax","Infinity","fullWidth","placeholder","placeHolder","key","bullet","display","transform","title","fontSize","pos","marginBottom","SimpleCard","Card","CardContent","Typography","color","gutterBottom","variant","component","deadLine","toLocaleString","dateStyle","timeStyle","parseToDays","createdDate","description","CardActions","Button","size","ConfirmPost","history","useHistory","open","setOpen","userInfo","handleClose","startIcon","onClick","children","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","owners","push","email","createDoc","maxWidth","flexGrow","minHeight","header","alignItems","height","paddingLeft","backgroundColor","palette","background","default","img","overflow","width","TextMobileStepper","useTheme","activeStep","setActiveStep","element","setElement","makeFormElement","message","form","Fragment","Paper","square","elevation","useEffect","getElement","MobileStepper","steps","position","nextButton","maxSteps","prevActiveStep","direction","backButton","disabled"],"mappings":"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","file":"static/js/14.05dd8a31.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { updateChallengeFormData } from \"../redux/actions\";\nimport { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SimpleSelect() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { challengeFormData } = useTrackedState();\n  const handleChange = (event) => {\n    challengeFormData.primeArea = event.target.value;\n    dispatch(updateChallengeFormData(challengeFormData));\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Primary area </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          defaultValue={challengeFormData.primeArea}\n          onChange={handleChange}\n        >\n          <MenuItem value={\"Web development\"}>Web development</MenuItem>\n          <MenuItem value={\"Art\"}>Art</MenuItem>\n          <MenuItem value={\"Text\"}>Text</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { updateChallengeFormData } from '../redux/actions'\nimport { useDispatch, useTrackedState } from 'reactive-react-redux';\n\n\nexport default function MaterialUIPickers() {\n  // The first commit of Material-UI\n  const today = new Date();\n  const [selectedDate, setSelectedDate] = React.useState(today);\n  const dispatch = useDispatch();\n  const {challengeFormData} = useTrackedState();\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    challengeFormData['deadLine'] = selectedDate;\n    dispatch(updateChallengeFormData(challengeFormData));\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container>\n     \n       <KeyboardDatePicker\n          minDate={today}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"Pick date\"\n          format=\"MM/dd/yyyy\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardTimePicker\n          minDate={today}\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"Pick a time\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { updateChallengeFormData } from '../redux/actions'\nimport { useDispatch, useTrackedState } from 'reactive-react-redux';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('Controlled');\n  const dispatch = useDispatch();\n  const { challengeFormData } = useTrackedState();\n\n  const handleChange = (value, id) => {\n    challengeFormData[id] = value;\n    dispatch(updateChallengeFormData(challengeFormData));\n    console.log(id);\n  };\n\n\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      \n        <TextField\n          required={true}\n          id={props.id}\n          label=\"Required\"\n          multiline\n          onChange={(e) => handleChange(e.target.value, props.id)}\n          rowsMax={Infinity}\n          fullWidth={true}\n          placeholder={props.placeHolder}\n          key={challengeFormData[props.id]}\n          defaultValue={challengeFormData[props.id]}\n        />\n      \n    </form>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTrackedState } from \"reactive-react-redux\";\nimport { parseToDays } from \"../js/datePrase\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n  const { challengeFormData } = useTrackedState();\n  // console.log(challengeFormData);\n  let options = { dateStyle: \"long\", timeStyle: \"long\" };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <h5>Preview</h5>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          {challengeFormData.primeArea}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h6\">\n          {challengeFormData.title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {\"Deadline: \" +\n            challengeFormData.deadLine.toLocaleString(\"default\", options)}\n          <br />\n          {\"Created: \" +\n            parseToDays(challengeFormData.createdDate.toLocaleString())}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {challengeFormData.description}\n          <br />\n          {/* {'\"a benevolent smile\"'} */}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useDispatch, useTrackedState } from \"reactive-react-redux\";\nimport { createDoc } from \"../backend/AxiosRequest\";\nimport { useHistory } from \"react-router-dom\";\n\nconst validateForm = (challengeFormData) => {\n  // validate title\n  if (!challengeFormData.title) {\n    return false;\n  }\n};\n\nexport default function ConfirmPost(props) {\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const { challengeFormData, userInfo } = useTrackedState();\n  const postAxios = () => {\n    challengeFormData.owners.push(userInfo.email);\n    createDoc(challengeFormData);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    setOpen(false);\n    postAxios();\n    history.push(\"/me\");\n  };\n\n  return (\n    <div>\n      <Button\n        startIcon={props.startIcon}\n        variant={props.variant}\n        color={props.color}\n        onClick={handleClickOpen}\n      >\n        {props.children}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Submit the challenge?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please review the challenge for errors before submitting.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SelectFiled from \"./SelectField\";\nimport DateTimePicker from \"./DateTimePicker\";\nimport MultilineText from \"./MultilineText\";\nimport ProjectCard from \"./ProjectCardPreview\";\nimport ConfirmPost from \"./ConfirmPost\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\",\n    flexGrow: 1,\n    minHeight: \"100vh\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 255,\n    maxWidth: 400,\n    overflow: \"hidden\",\n    display: \"block\",\n    width: \"100%\",\n  },\n}));\n\nexport default function TextMobileStepper() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = 6;\n  const [element, setElement] = React.useState(null);\n\n  const makeFormElement = (message, form) => {\n    return (\n      <React.Fragment>\n        <Paper square elevation={0} className={classes.header}>\n          <Typography variant=\"h6\">{message}</Typography>\n        </Paper>\n        {form}\n      </React.Fragment>\n    );\n  };\n  const getElement = (activeStep) => {\n    switch (activeStep) {\n      case 0:\n        return makeFormElement(\n          \"Select a primary area\",\n          <SelectFiled id=\"primeArea\" />\n        );\n\n      case 1:\n        return makeFormElement(\n          \"Enter a title for the project\",\n          <MultilineText id=\"title\" />\n        );\n      case 2:\n        return makeFormElement(\n          \"Select a dealline\",\n          <DateTimePicker id=\"dateTime\" />\n        );\n      case 3:\n        return makeFormElement(\n          \"Enter a project description\",\n          <MultilineText id=\"description\" />\n        );\n      case 4:\n        return makeFormElement(\n          \"Enter the procedure\",\n          <MultilineText id=\"procedure\" />\n        );\n      case 5:\n        return makeFormElement(\"Review\", <ProjectCard id=\"review\" />);\n\n      default:\n        return \"Unknown step\";\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n  useEffect(() => setElement(getElement(activeStep)), [activeStep]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <h1>Create a challenge</h1>\n        <hr></hr>\n      </div>\n      {element}\n\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"text\"\n        activeStep={activeStep}\n        nextButton={\n          <React.Fragment>\n            {activeStep === maxSteps - 1 ? (\n              <ConfirmPost\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PublishIcon />}\n              >\n                {\" \"}\n                Submit{\" \"}\n              </ConfirmPost>\n            ) : (\n              <Button\n                size=\"small\"\n                onClick={handleNext}\n                variant=\"contained\"\n                color={activeStep === maxSteps - 1 ? \"secondary\" : \"primary\"}\n              >\n                Next\n                {theme.direction === \"rtl\" ? (\n                  <KeyboardArrowLeft />\n                ) : (\n                  <KeyboardArrowRight />\n                )}\n              </Button>\n            )}\n          </React.Fragment>\n        }\n        backButton={\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={handleBack}\n            disabled={activeStep === 0}\n          >\n            {theme.direction === \"rtl\" ? (\n              <KeyboardArrowRight />\n            ) : (\n              <KeyboardArrowLeft />\n            )}\n            Back\n          </Button>\n        }\n      />\n      {activeStep === maxSteps - 1 ? null : <ProjectCard />}\n    </div>\n  );\n}\n"],"sourceRoot":""}